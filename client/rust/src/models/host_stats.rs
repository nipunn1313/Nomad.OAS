/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HostStats {
    #[serde(rename = "Memory", skip_serializing_if = "Option::is_none")]
    pub memory: Option<Box<crate::models::HostMemoryStats>>,
    #[serde(rename = "Cpu", skip_serializing_if = "Option::is_none")]
    pub cpu: Option<Vec<crate::models::HostCpuStats>>,
    #[serde(rename = "DiskStats", skip_serializing_if = "Option::is_none")]
    pub disk_stats: Option<Vec<crate::models::HostDiskStats>>,
    #[serde(rename = "DeviceStats", skip_serializing_if = "Option::is_none")]
    pub device_stats: Option<Vec<crate::models::DeviceGroupStats>>,
    #[serde(rename = "Uptime", skip_serializing_if = "Option::is_none")]
    pub uptime: Option<i32>,
    #[serde(rename = "CpuTicksConsumed", skip_serializing_if = "Option::is_none")]
    pub cpu_ticks_consumed: Option<f64>,
}

impl HostStats {
    pub fn new() -> HostStats {
        HostStats {
            memory: None,
            cpu: None,
            disk_stats: None,
            device_stats: None,
            uptime: None,
            cpu_ticks_consumed: None,
        }
    }
}


