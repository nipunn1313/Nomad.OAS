/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServerHealth {
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<String>,
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "Address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "SerfStatus", skip_serializing_if = "Option::is_none")]
    pub serf_status: Option<String>,
    #[serde(rename = "Version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "Leader", skip_serializing_if = "Option::is_none")]
    pub leader: Option<bool>,
    #[serde(rename = "LastContact", skip_serializing_if = "Option::is_none")]
    pub last_contact: Option<i64>,
    #[serde(rename = "LastTerm", skip_serializing_if = "Option::is_none")]
    pub last_term: Option<i32>,
    #[serde(rename = "LastIndex", skip_serializing_if = "Option::is_none")]
    pub last_index: Option<i32>,
    #[serde(rename = "Healthy", skip_serializing_if = "Option::is_none")]
    pub healthy: Option<bool>,
    #[serde(rename = "Voter", skip_serializing_if = "Option::is_none")]
    pub voter: Option<bool>,
    #[serde(rename = "StableSince", skip_serializing_if = "Option::is_none")]
    pub stable_since: Option<String>,
}

impl ServerHealth {
    pub fn new() -> ServerHealth {
        ServerHealth {
            ID: None,
            name: None,
            address: None,
            serf_status: None,
            version: None,
            leader: None,
            last_contact: None,
            last_term: None,
            last_index: None,
            healthy: None,
            voter: None,
            stable_since: None,
        }
    }
}


