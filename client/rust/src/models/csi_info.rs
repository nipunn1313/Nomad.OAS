/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CsiInfo {
    #[serde(rename = "PluginID", skip_serializing_if = "Option::is_none")]
    pub plugin_id: Option<String>,
    #[serde(rename = "Healthy", skip_serializing_if = "Option::is_none")]
    pub healthy: Option<bool>,
    #[serde(rename = "HealthDescription", skip_serializing_if = "Option::is_none")]
    pub health_description: Option<String>,
    #[serde(rename = "UpdateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    #[serde(rename = "RequiresControllerPlugin", skip_serializing_if = "Option::is_none")]
    pub requires_controller_plugin: Option<bool>,
    #[serde(rename = "RequiresTopologies", skip_serializing_if = "Option::is_none")]
    pub requires_topologies: Option<bool>,
    #[serde(rename = "ControllerInfo", skip_serializing_if = "Option::is_none")]
    pub controller_info: Option<Box<crate::models::CsiControllerInfo>>,
    #[serde(rename = "NodeInfo", skip_serializing_if = "Option::is_none")]
    pub node_info: Option<Box<crate::models::CsiNodeInfo>>,
}

impl CsiInfo {
    pub fn new() -> CsiInfo {
        CsiInfo {
            plugin_id: None,
            healthy: None,
            health_description: None,
            update_time: None,
            requires_controller_plugin: None,
            requires_topologies: None,
            controller_info: None,
            node_info: None,
        }
    }
}


