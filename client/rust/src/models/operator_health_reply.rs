/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct OperatorHealthReply {
    #[serde(rename = "Healthy", skip_serializing_if = "Option::is_none")]
    pub healthy: Option<bool>,
    #[serde(rename = "FailureTolerance", skip_serializing_if = "Option::is_none")]
    pub failure_tolerance: Option<i32>,
    #[serde(rename = "Servers", skip_serializing_if = "Option::is_none")]
    pub servers: Option<Vec<crate::models::ServerHealth>>,
}

impl OperatorHealthReply {
    pub fn new() -> OperatorHealthReply {
        OperatorHealthReply {
            healthy: None,
            failure_tolerance: None,
            servers: None,
        }
    }
}


