/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MemoryStats {
    #[serde(rename = "Rss", skip_serializing_if = "Option::is_none")]
    pub rss: Option<i32>,
    #[serde(rename = "Cache", skip_serializing_if = "Option::is_none")]
    pub cache: Option<i32>,
    #[serde(rename = "Swap", skip_serializing_if = "Option::is_none")]
    pub swap: Option<i32>,
    #[serde(rename = "Usage", skip_serializing_if = "Option::is_none")]
    pub usage: Option<i32>,
    #[serde(rename = "MaxUsage", skip_serializing_if = "Option::is_none")]
    pub max_usage: Option<i32>,
    #[serde(rename = "KernelUsage", skip_serializing_if = "Option::is_none")]
    pub kernel_usage: Option<i32>,
    #[serde(rename = "KernelMaxUsage", skip_serializing_if = "Option::is_none")]
    pub kernel_max_usage: Option<i32>,
    #[serde(rename = "Measured", skip_serializing_if = "Option::is_none")]
    pub measured: Option<Vec<String>>,
}

impl MemoryStats {
    pub fn new() -> MemoryStats {
        MemoryStats {
            rss: None,
            cache: None,
            swap: None,
            usage: None,
            max_usage: None,
            kernel_usage: None,
            kernel_max_usage: None,
            measured: None,
        }
    }
}


