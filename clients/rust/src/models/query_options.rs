/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryOptions {
    #[serde(rename = "Region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    #[serde(rename = "Namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "AllowStale", skip_serializing_if = "Option::is_none")]
    pub allow_stale: Option<bool>,
    #[serde(rename = "WaitIndex", skip_serializing_if = "Option::is_none")]
    pub wait_index: Option<i32>,
    #[serde(rename = "WaitTime", skip_serializing_if = "Option::is_none")]
    pub wait_time: Option<i64>,
    #[serde(rename = "Prefix", skip_serializing_if = "Option::is_none")]
    pub prefix: Option<String>,
    #[serde(rename = "Params", skip_serializing_if = "Option::is_none")]
    pub params: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "AuthToken", skip_serializing_if = "Option::is_none")]
    pub auth_token: Option<String>,
}

impl QueryOptions {
    pub fn new() -> QueryOptions {
        QueryOptions {
            region: None,
            namespace: None,
            allow_stale: None,
            wait_index: None,
            wait_time: None,
            prefix: None,
            params: None,
            auth_token: None,
        }
    }
}


