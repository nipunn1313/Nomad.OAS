/*
 * Nomad
 *
 * Nomad OpenApi specification
 *
 * The version of the OpenAPI document: 0.11.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkResource {
    #[serde(rename = "Mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<String>,
    #[serde(rename = "Device", skip_serializing_if = "Option::is_none")]
    pub device: Option<String>,
    #[serde(rename = "CIDR", skip_serializing_if = "Option::is_none")]
    pub CIDR: Option<String>,
    #[serde(rename = "IP", skip_serializing_if = "Option::is_none")]
    pub IP: Option<String>,
    #[serde(rename = "MBits", skip_serializing_if = "Option::is_none")]
    pub m_bits: Option<i32>,
    #[serde(rename = "ReservedPorts", skip_serializing_if = "Option::is_none")]
    pub reserved_ports: Option<Vec<crate::models::Port>>,
    #[serde(rename = "DynamicPorts", skip_serializing_if = "Option::is_none")]
    pub dynamic_ports: Option<Vec<crate::models::Port>>,
    #[serde(rename = "DNS", skip_serializing_if = "Option::is_none")]
    pub DNS: Option<Box<crate::models::NetworkDns>>,
}

impl NetworkResource {
    pub fn new() -> NetworkResource {
        NetworkResource {
            mode: None,
            device: None,
            CIDR: None,
            IP: None,
            m_bits: None,
            reserved_ports: None,
            dynamic_ports: None,
            DNS: None,
        }
    }
}


